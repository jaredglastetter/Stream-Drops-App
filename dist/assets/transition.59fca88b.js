import{a5 as b,p as d,a3 as l,x as I,aa as _}from"./index.8c8c234d.js";function g(e,n){if(!b)return;const s=n.modifiers||{},t=n.value,{handler:o,options:a}=typeof t=="object"?t:{handler:t,options:{}},r=new IntersectionObserver(function(){var f;let u=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],v=arguments.length>1?arguments[1]:void 0;const i=(f=e._observe)==null?void 0:f[n.instance.$.uid];if(!i)return;const c=u.some(p=>p.isIntersecting);o&&(!s.quiet||i.init)&&(!s.once||c||i.init)&&o(c,u,v),c&&s.once?m(e,n):i.init=!0},a);e._observe=Object(e._observe),e._observe[n.instance.$.uid]={init:!1,observer:r},r.observe(e)}function m(e,n){var t;const s=(t=e._observe)==null?void 0:t[n.instance.$.uid];!s||(s.observer.unobserve(e),delete e._observe[n.instance.$.uid])}const y={mounted:g,unmounted:m},h=y,O=d({transition:{type:[Boolean,String,Object],default:"fade-transition",validator:e=>e!==!0}},"transition"),P=(e,n)=>{let{slots:s}=n;const{transition:t,...o}=e,{component:a=_,...r}=typeof t=="object"?t:{};return l(a,I(typeof t=="string"?{name:t}:r,o),s)};export{h as I,P as M,O as m};
